{% include 'header' %}

import SnapKit
import UIKit

protocol {{ module_info.name }}ViewDelegate: class {
    
    func didSelect{{ module_info.name }}Item(_ item: {{ custom_parameters.dto }})
}

final class {{ module_info.name }}View: UIView {

    weak var delegate: {{ module_info.name }}ViewDelegate?
    
    private let tableController: {{ module_info.name }}ViewTableController = {{ module_info.name }}ViewTableController()

    private let tableView: UITableView = UITableView()

    // MARK: - Life cycle
    override init(frame: CGRect) {
        super.init(frame: frame)
        setupLayout()
        
        congifureTableView()
        tableController.delegate = self
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: - Public functions
    func update(_ items: [{{ custom_parameters.dto }}]) {
        
        tableController.updateDataSource(points)
        tableView.reloadData()
    }

    // MARK: - Private functions
    private func congifureTableView() {
        
        tableView.separatorStyle = .none
        tableView.rowHeight = UITableView.automaticDimension
        tableView.estimatedRowHeight = UITableView.automaticDimension
        tableView.register({{ module_info.name }}TableViewCell.self,
                           forCellReuseIdentifier: {{ module_info.name }}TableViewCell.reuseIdentifier)
        tableView.dataSource = tableController
        tableView.delegate = tableController
    }

    private func setupLayout() {
        
        backgroundColor = .clear

        addSubview(tableView)
        tableView.backgroundColor = .clear
        tableView.snp.makeConstraints { make in
            make.edges.equalToSuperview()
        }
    }

    // MARK: - Actions

}

// MARK: - {{ module_info.name }}ViewTableControllerDelegate
extension {{ module_info.name }}View: {{ module_info.name }}ViewTableControllerDelegate {
    
    func didSelectItem(_ item: {{ custom_parameters.dto }}) {
        delegate?.didSelectSearchItem(item)
    }
    
}
