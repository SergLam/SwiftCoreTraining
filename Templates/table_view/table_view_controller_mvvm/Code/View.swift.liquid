{% include 'header' %}

import SnapKit
import UIKit

protocol {{ module_info.name }}ViewDelegate: class {
    
    func onPullToRefreshAction()
}

final class {{ module_info.name }}View: UIView {
    
    weak var delegate: {{ module_info.name }}ViewDelegate?
    
    let tableView: UITableView = UITableView()
    
    private let refreshControl = UIRefreshControl()
    private let refreshControlTitle: String = "Refreshing data..."
    
    // MARK: - Lifecycle
    override init(frame: CGRect) {
        super.init(frame: frame)
        setupLayout()
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    // MARK: - Public methods
    func changeRefreshControlVisibility(isVisible: Bool) {
        
        if isVisible {
            refreshControl.beginRefreshing()
        } else {
            refreshControl.endRefreshing()
        }
    }
    
    // MARK: - Private methods
    private func setupLayout() {

        addSubview(tableView)
        tableView.separatorStyle = .none
        tableView.snp.makeConstraints { make in
            make.edges.equalTo(safeAreaLayoutGuide)
        }
        
        tableView.refreshControl = refreshControl
        refreshControl.tintColor = .black
        let attributes: [NSAttributedString.Key: Any] = [.foregroundColor: UIColor.black,
                                                         .font: UIFont.systemFont(ofSize: 15.0, weight: .medium)]
        refreshControl.attributedTitle = NSAttributedString(string: refreshControlTitle, attributes: attributes)
        refreshControl.addTarget(self, action: #selector(refresh{{ module_info.name }}Data(_:)), for: .valueChanged)
    }
    
    @objc
    private func refresh{{ module_info.name }}Data(_ sender: Any) {
        delegate?.onPullToRefreshAction()
    }
}
